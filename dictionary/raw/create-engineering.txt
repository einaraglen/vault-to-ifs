BEGIN 
        BEGIN :p0:= &AO.TECHNICAL_OBJ_REF_APPROVED_API.Get_Client_Value(1);
        END; 
    EXCEPTION 
    WHEN &AO.Error_SYS.Err_Security_Checkpoint 
    THEN 
    raise; 
    WHEN OTHERS THEN 
    rollback; 
    raise; 
END;



BEGIN 
    &AO.ENG_PART_MASTER_API.NEW__(:p0, :p1, :p2, :p3, :p4); 
    EXCEPTION 
    WHEN &AO.Error_SYS.Err_Security_Checkpoint THEN 
    raise; 
    WHEN OTHERS THEN 
    rollback; 
    raise; 
END;



BEGIN 
    &AO.TECHNICAL_OBJECT_REFERENCE_API.NEW__(:p0, :p1, :p2, :p3, :p4); 
    EXCEPTION 
    WHEN &AO.Error_SYS.Err_Security_Checkpoint THEN 
    raise; 
    WHEN OTHERS THEN 
    rollback; 
    raise; 
END;



SELECT &AO.PART_CATALOG_API.Check_Part_Exists2(:p0),&AO.ENG_PART_MASTER_API.Check_Part_Exists(:p1),&AO.PART_CATALOG_API.Get_Description(:p2) FROM DUAL


BEGIN 
        BEGIN &AO.Eng_Part_Provide_API.Exist(:p0);
        END; 
    EXCEPTION 
    WHEN &AO.Error_SYS.Err_Security_Checkpoint THEN 
    raise; 
    WHEN OTHERS THEN 
    rollback; 
    raise; 
END;


BEGIN 
    &AO.INVENTORY_TEMPLATE_PART_API.Parts_Exist; 
    EXCEPTION 
    WHEN &AO.Error_SYS.Err_Security_Checkpoint THEN 
    raise; 
    WHEN OTHERS THEN 
    rollback; 
    raise; 
END;



BEGIN 
    :p0:= &AO.INVENTORY_TEMPLATE_PART_API.Default_Part_Exist(:p1); 
    EXCEPTION 
    WHEN &AO.Error_SYS.Err_Security_Checkpoint THEN 
    raise; 
    WHEN OTHERS THEN 
    rollback; 
    raise; 
END;


select OBJID, OBJVERSION, CONTRACT, &AO.Site_API.Get_Description(CONTRACT) from &AO.USER_ALLOWED_SITE where USERID = :p0

## FROM OLD NOVACURA ALL CREATES ##
IFSAPP.TECHNICAL_OBJECT_REFERENCE_API.NEW__(info_, objid_, objversion_, attr_, 'DO');
IFSAPP.PART_CATALOG_API.New__(info_, objid_, objversion_, attr_, 'DO');
IFSAPP.ENG_PART_MASTER_API.New__(info_, objid_, objversion_, attr_, 'DO');

IFSAPP.INVENTORY_PART_API.New__(info_, objid_, objversion_, attr_, 'DO');
IFSAPP.PURCHASE_PART_API.New__(info_, objid_, objversion_, attr_, 'DO');
IFSAPP.SALES_PART_API.New__(info_, objid_, objversion_, attr_, 'DO');


## Vault Interface New Auto ##
DECLARE
    state_  VARCHAR2(20); 
iF EXIST THEN state_ := 'DO' ELSE state_ = 'PREPARE'

1. IFSAPP.TECHNICAL_OBJECT_REFERENCE_API.NEW__(info_, objid_, objversion_, attr_, state_);
2. IFSAPP.PART_CATALOG_API.New__(info_, objid_, objversion_, attr_, state_);
3. IFSAPP.ENG_PART_MASTER_API.New__(info_, objid_, objversion_, attr_, state_);
4. IFSAPP.INVENTORY_PART_API.New__(info_, objid_, objversion_, attr_, state_);
5. IFSAPP.PURCHASE_PART_API.New__(info_, objid_, objversion_, attr_, state_);
6. IFSAPP.SALES_PART_API.New__(info_, objid_, objversion_, attr_, state_);

## Vault Interface Process BOM Auto ##
IF struct_found_ = 0 AND objstate_ = 'Preliminary' THEN
            FOR l_ IN get_line(r_.message_id) LOOP
               attr_               := NULL;
               line_error_message_ := NULL;
               line_               := l_.MESSAGE_LINE;
               item_               := l_.c06;
               IFSAPP.ENG_PART_STRUCTURE_API.New__(info_, objid_, objversion_, attr_, 'PREPARE');
               IFSAPP.Client_SYS.Add_To_Attr('STRUCTURE_ID', 'STD', attr_);
               IFSAPP.Client_SYS.Add_To_Attr('PART_NO', l_.c02, attr_);
               IFSAPP.Client_SYS.Add_To_Attr('PART_REV', l_.c03, attr_);
               IFSAPP.Client_SYS.Add_To_Attr('SUB_PART_NO', l_.c06, attr_);
               IFSAPP.Client_SYS.Add_To_Attr('SUB_PART_REV', l_.c07, attr_);
               IFSAPP.Client_SYS.Add_To_Attr('POS', SUBSTR(l_.c04,1,10), attr_);
               IFSAPP.Client_SYS.Set_Item_Value('QTY', l_.n01, attr_);
               BEGIN
                  IFSAPP.ENG_PART_STRUCTURE_API.New__(info_, objid_, objversion_, attr_, 'DO');
               EXCEPTION
                  WHEN OTHERS THEN
                     ROLLBACK;
                     attr_               := NULL;
                     line_error_message_ := 'Error=' || SUBSTR(SQLERRM, 1, 200);
                     IFSAPP.Client_SYS.Add_To_Attr('ERROR_MESSAGE', line_error_message_, attr_);
                     IFSAPP.In_Message_Line_API.Modify__(info_,
                                                         l_.objid,
                                                         l_.objversion,
                                                         attr_,
                                                         'DO');
                     COMMIT;
                     RAISE;
               END;
            END LOOP;


FOR l_ IN get_line(r_.message_id) LOOP
                     attr_               := NULL;
                     line_error_message_ := NULL;
                     line_               := l_.MESSAGE_LINE;
                     item_               := l_.c06;
                     IFSAPP.ENG_PART_STRUCTURE_API.New__(info_,
                                                         objid_,
                                                         objversion_,
                                                         attr_,
                                                         'PREPARE');
                     IFSAPP.Client_SYS.Add_To_Attr('STRUCTURE_ID', 'STD', attr_);
                     IFSAPP.Client_SYS.Add_To_Attr('PART_NO', l_.c02, attr_);
                     IFSAPP.Client_SYS.Add_To_Attr('PART_REV', l_.c03, attr_);
                     IFSAPP.Client_SYS.Add_To_Attr('SUB_PART_NO', l_.c06, attr_);
                     IFSAPP.Client_SYS.Add_To_Attr('SUB_PART_REV', l_.c07, attr_);
                     IFSAPP.Client_SYS.Add_To_Attr('POS', SUBSTR(l_.c04,1,10), attr_);
                     IFSAPP.Client_SYS.Set_Item_Value('QTY', l_.n01, attr_);
                     IF l_.c02 NOT LIKE '16%' THEN
                         IFSAPP.ENG_PART_STRUCTURE_API.New__(info_, objid_, objversion_, attr_, 'DO');
                     ELSE
                        OPEN check_sub_struct( l_.c02, l_.c03, l_.c06, l_.c07);
                        FETCH check_sub_struct INTO exists_;
                        CLOSE check_sub_struct;
                        IF exists_ = 0 THEN
                           IFSAPP.ENG_PART_STRUCTURE_API.New__(info_, objid_, objversion_, attr_, 'DO');
                        END IF;
                     END IF;
                  END LOOP;


FOR s_ IN get_spare_parts(r_.message_id) LOOP
            attr_ := NULL;
            IFSAPP.Client_SYS.Add_To_Attr('PART_NO', s_.c02, attr_);
            IFSAPP.Client_SYS.Add_To_Attr('PART_REV', s_.c03, attr_);
            IFSAPP.Client_SYS.Add_To_Attr('SPARE_PART_NO', s_.c06, attr_);
            IFSAPP.Client_SYS.Add_To_Attr('SPARE_PART_REV', s_.c07, attr_);
            IFSAPP.Client_SYS.Add_To_Attr('QTY', s_.n01, attr_);
            IFSAPP.Client_SYS.Add_To_Attr('INFO', 'VAULT', attr_);
            IFSAPP.Eng_Part_Spare_API.New__(info_, objid_, objversion_, attr_, 'DO');
         END LOOP;



FOR l_ IN get_line(r_.message_id) LOOP
               attr_               := NULL;
               line_error_message_ := NULL;
               line_               := l_.MESSAGE_LINE;
               item_               := l_.c06;
               IFSAPP.ENG_PART_STRUCTURE_API.New__(info_, objid_, objversion_, attr_, 'PREPARE');
               IFSAPP.Client_SYS.Add_To_Attr('STRUCTURE_ID', 'STD', attr_);
               IFSAPP.Client_SYS.Add_To_Attr('PART_NO', l_.c02, attr_);
               IFSAPP.Client_SYS.Add_To_Attr('PART_REV', l_.c03, attr_);
               IFSAPP.Client_SYS.Add_To_Attr('SUB_PART_NO', l_.c06, attr_);
               IFSAPP.Client_SYS.Add_To_Attr('SUB_PART_REV', l_.c07, attr_);
               IFSAPP.Client_SYS.Add_To_Attr('POS', SUBSTR(l_.c04,1,10), attr_);
               IFSAPP.Client_SYS.Set_Item_Value('QTY', l_.n01, attr_);
               BEGIN
                  IFSAPP.ENG_PART_STRUCTURE_API.New__(info_, objid_, objversion_, attr_, 'DO');
               EXCEPTION
                  WHEN OTHERS THEN
                     ROLLBACK;
                     attr_               := NULL;
                     line_error_message_ := 'Error=' || SUBSTR(SQLERRM, 1, 200);
                     IFSAPP.Client_SYS.Add_To_Attr('ERROR_MESSAGE', line_error_message_, attr_);
                     IFSAPP.In_Message_Line_API.Modify__(info_,
                                                         l_.objid,
                                                         l_.objversion,
                                                         attr_,
                                                         'DO');
                     COMMIT;
                     RAISE;
               END;
            END LOOP;



FOR l_ IN get_line(r_.message_id) LOOP
                     attr_               := NULL;
                     line_error_message_ := NULL;
                     line_               := l_.MESSAGE_LINE;
                     item_               := l_.c06;
                     IFSAPP.ENG_PART_STRUCTURE_API.New__(info_,
                                                         objid_,
                                                         objversion_,
                                                         attr_,
                                                         'PREPARE');
                     IFSAPP.Client_SYS.Add_To_Attr('STRUCTURE_ID', 'STD', attr_);
                     IFSAPP.Client_SYS.Add_To_Attr('PART_NO', l_.c02, attr_);
                     IFSAPP.Client_SYS.Add_To_Attr('PART_REV', l_.c03, attr_);
                     IFSAPP.Client_SYS.Add_To_Attr('SUB_PART_NO', l_.c06, attr_);
                     IFSAPP.Client_SYS.Add_To_Attr('SUB_PART_REV', l_.c07, attr_);
                     IFSAPP.Client_SYS.Add_To_Attr('POS', SUBSTR(l_.c04,1,10), attr_);
                     IFSAPP.Client_SYS.Set_Item_Value('QTY', l_.n01, attr_);
                     IFSAPP.ENG_PART_STRUCTURE_API.New__(info_, objid_, objversion_, attr_, 'DO');
                  END LOOP;


FOR s_ IN get_spare_parts(r_.message_id) LOOP
            attr_ := NULL;
            IFSAPP.Client_SYS.Add_To_Attr('PART_NO', s_.c02, attr_);
            IFSAPP.Client_SYS.Add_To_Attr('PART_REV', s_.c03, attr_);
            IFSAPP.Client_SYS.Add_To_Attr('SPARE_PART_NO', s_.c06, attr_);
            IFSAPP.Client_SYS.Add_To_Attr('SPARE_PART_REV', s_.c07, attr_);
            IFSAPP.Client_SYS.Add_To_Attr('QTY', s_.n01, attr_);
            IFSAPP.Client_SYS.Add_To_Attr('INFO', 'VAULT', attr_);
            IFSAPP.Eng_Part_Spare_API.New__(info_, objid_, objversion_, attr_, 'DO');
         END LOOP;

IFSAPP.Client_SYS.Add_To_Attr('MESSAGE_ID', message_id_, attr_ );
	  IFSAPP.Client_SYS.Add_To_Attr('NAME', 'ROW', attr_ );
	  IFSAPP.Client_SYS.Add_To_Attr('MESSAGE_LINE', message_line_, attr_ );
	  IFSAPP.Client_SYS.Add_To_Attr('C01', :bomRowId, attr_ );
	  IFSAPP.Client_SYS.Add_To_Attr('C02', Prefix_Part_No__ (:bomParentPart), attr_ ); 
	  IFSAPP.Client_SYS.Add_To_Attr('C03', :bomParentRevision, attr_ ); 
	  IFSAPP.Client_SYS.Add_To_Attr('C04', :bomLine, attr_ ); 
	  IFSAPP.Client_SYS.Add_To_Attr('C05', '', attr_ ); /* RuidItem */
	  IFSAPP.Client_SYS.Add_To_Attr('C06', Prefix_Part_No__(:bomItemNumber), attr_ ); 
	  IFSAPP.Client_SYS.Add_To_Attr('C07', :bomItemRevision, attr_ ); 
	  IFSAPP.Client_SYS.Add_To_Attr('C09', :bomItemSparePart, attr_ ); 
	  IFSAPP.Client_SYS.Add_To_Attr('C08', :bomItemRevision, attr_ ); 
	  IFSAPP.Client_SYS.Add_To_Attr('C09', :bomItemStatus, attr_ ); 
	  IFSAPP.Client_SYS.Add_To_Attr('C10', :bomItemStatus, attr_ ); 
	  IFSAPP.Client_SYS.Add_To_Attr('N01', :bomQuantity, attr_ );  
	  IFSAPP.In_Message_Line_API.New__( info_, objid_, objversion_, attr_, 'DO' );




select 
   OBJID, 
   OBJVERSION, 
   ALTERNATIVE_PART_NO, 
   &AO.PART_CATALOG_API.Get_Description(ALTERNATIVE_PART_NO), 
   &AO.Standard_Names_API.Get_Std_Name(&AO.Part_Catalog_API.Get_Std_Name_Id(ALTERNATIVE_PART_NO)), 
   MUTUAL, 
   NOTE_TEXT, 
   DT_CRE, 
   USER_CREATED, 
   DT_CHG, 
   USER_SIGN, 
   PART_NO 
from 
   &AO.PART_CATALOG_ALTERNATIVE 
where 
   PART_NO = :p0