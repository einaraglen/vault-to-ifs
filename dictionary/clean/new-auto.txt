attr_ := NULL;
         IFSAPP.Client_SYS.Add_To_Attr('LU_NAME', 'PartCatalog', attr_);
         IFSAPP.Client_SYS.Add_To_Attr('KEY_REF',
                                       'PART_NO=' || Prefix_Part_No__(rec_.c01) || '^',
                                       attr_);
         IFSAPP.Client_SYS.Add_To_Attr('TECHNICAL_SPEC_NO', 0, attr_);
         IFSAPP.Client_SYS.Add_To_Attr('TECHNICAL_CLASS', 'SEPARTINFO', attr_);
         IFSAPP.Client_SYS.Add_To_Attr('OK_YES_NO',
                                       IFSAPP.Technical_Obj_Ref_Approved_API.Decode('1'),
                                       attr_);
         IFSAPP.Client_SYS.Add_To_Attr('OK_SIGN', 'IFSAPP', attr_);
         IFSAPP.Client_SYS.Add_To_Attr('DT_OK', TRUNC(SYSDATE), attr_);
         IFSAPP.TECHNICAL_OBJECT_REFERENCE_API.NEW__(info_, objid_, objversion_, attr_, 'DO');
         technical_spec_no_ := IFSAPP.Client_SYS.Get_Item_Value('TECHNICAL_SPEC_NO', attr_);


IFSAPP.Client_SYS.Clear_Attr(attr_);
         IFSAPP.PART_CATALOG_API.New__(info_, objid_, objversion_, attr_, 'PREPARE');
         IFSAPP.Client_SYS.Add_To_Attr('PART_NO', Prefix_Part_No__(rec_.c01), attr_);
         IFSAPP.Client_SYS.Add_To_Attr('DESCRIPTION',
                                       NVL(rec_.c07,
                                           'Description does not exist in Vault for article ' ||
                                           Prefix_Part_No__(rec_.c01)),
                                       attr_);
         IFSAPP.Client_SYS.Add_To_Attr('UNIT_CODE', rec_.C03, attr_);
         IFSAPP.Client_SYS.Add_To_Attr('STD_NAME_ID', '0', attr_);
         IFSAPP.PART_CATALOG_API.New__(info_, objid_, objversion_, attr_, 'DO');


IFSAPP.Client_SYS.Clear_Attr(attr_);
         IFSAPP.ENG_PART_MASTER_API.New__(info_, objid_, objversion_, attr_, 'PREPARE');
         IFSAPP.Client_SYS.Add_To_Attr('PART_NO', Prefix_Part_No__(rec_.c01), attr_);
         IFSAPP.Client_SYS.Add_To_Attr('DESCRIPTION',
                                       NVL(rec_.c07,
                                           'Description does not exist in Vault for article ' ||
                                           Prefix_Part_No__(rec_.c01)),
                                       attr_);
         IFSAPP.Client_SYS.Set_Item_Value('UNIT_CODE',
                                       IFSAPP.Part_Catalog_API.Get(Prefix_Part_No__(rec_.c01)).unit_code,
                                       attr_);
         IFSAPP.Client_SYS.Add_To_Attr('STD_NAME_ID', '0', attr_);
         IF (rec_.c02 IS NOT NULL) THEN
            IFSAPP.Client_SYS.Set_Item_Value('FIRST_REVISION', rec_.c02, attr_);
         END IF;
      
         IF (NVL(rec_.C17, 'N') = 'Y') THEN
            IFSAPP.Client_SYS.Add_To_Attr('SERIAL_TRACKING_CODE',
                                          IFSAPP.Part_Serial_Tracking_API.Decode('SERIAL TRACKING'),
                                          attr_);
            IFSAPP.Client_SYS.Add_To_Attr('SERIAL_TYPE',
                                          IFSAPP.Part_Serial_Tracking_API.Decode('SERIAL TRACKING'),
                                          attr_);
         END IF;
         IFSAPP.ENG_PART_MASTER_API.New__(info_, objid_, objversion_, attr_, 'DO');



IFSAPP.Client_SYS.Clear_Attr(attr_);
         IFSAPP.PURCHASE_PART_API.New__(info_, objid_, objversion_, attr_, 'PREPARE');
         IFSAPP.Client_SYS.Add_To_Attr('PART_NO', Prefix_Part_No__(rec_.c01), attr_);
         IFSAPP.Client_SYS.Add_To_Attr('DESCRIPTION',
                                       NVL(rec_.c07,
                                           'Description does not exist in Vault for article ' ||
                                           Prefix_Part_No__(rec_.c01)),
                                       attr_);
         IFSAPP.Client_SYS.Add_To_Attr('INVENTORY_FLAG_DB', 'Y', attr_);
         IFSAPP.Client_SYS.Add_To_Attr('DEFAULT_BUY_UNIT_MEAS', rec_.C03, attr_);
         IFSAPP.Client_SYS.Add_To_Attr('TAXABLE', 'False', attr_);
         IFSAPP.Client_SYS.Set_Item_Value('CONTRACT', contract_, attr_);
         IFSAPP.PURCHASE_PART_API.New__(info_, objid_, objversion_, attr_, 'DO');



IFSAPP.Client_SYS.Clear_Attr(attr_);
         IFSAPP.Client_SYS.Add_To_Attr('CONTRACT', 'SE', attr_);
         IFSAPP.Client_SYS.Add_To_Attr('CATALOG_TYPE_DB', 'INV', attr_);
         IFSAPP.Client_SYS.Add_To_Attr('PRIMARY_CATALOG_DB', 'FALSE', attr_);
         IFSAPP.Client_SYS.Add_To_Attr('ACTIVEIND_DB', 'Y', attr_);
         IFSAPP.Client_SYS.Add_To_Attr('BONUS_BASIS_FLAG_DB', 'N', attr_);
         IFSAPP.Client_SYS.Add_To_Attr('BONUS_VALUE_FLAG_DB', 'N', attr_);
         IFSAPP.Client_SYS.Add_To_Attr('CONV_FACTOR', 1, attr_);
         IFSAPP.Client_SYS.Add_To_Attr('PRICE_CONV_FACTOR', 1, attr_);
         IFSAPP.Client_SYS.Add_To_Attr('DATE_ENTERED', SYSDATE, attr_);
         IFSAPP.Client_SYS.Add_To_Attr('CLOSE_TOLERANCE', 0, attr_);
         IFSAPP.Client_SYS.Add_To_Attr('QUICK_REGISTERED_PART_DB', 'FALSE', attr_);
         IFSAPP.Client_SYS.Add_To_Attr('ALLOW_PARTIAL_PKG_DELIV_DB', 'TRUE', attr_);
         IFSAPP.Client_SYS.Add_To_Attr('CATALOG_NO', Prefix_Part_No__(rec_.c01), attr_);
         IFSAPP.Client_SYS.Add_To_Attr('PART_NO', Prefix_Part_No__(rec_.c01), attr_);
         IFSAPP.Client_SYS.Add_To_Attr('CATALOG_DESC',
                                       NVL(rec_.c07,
                                           'Description does not exist in Vault for article ' ||
                                           Prefix_Part_No__(rec_.c01)),
                                       attr_);
         IFSAPP.Client_SYS.Add_To_Attr('CATALOG_GROUP', 'SE', attr_);
         IFSAPP.Client_SYS.Add_To_Attr('SALES_PRICE_GROUP_ID', 'SE', attr_);
         IFSAPP.Client_SYS.Add_To_Attr('SALES_UNIT_MEAS', rec_.C03, attr_);
         IFSAPP.Client_SYS.Add_To_Attr('ACTIVEIND_DB', 'Y', attr_);
         IFSAPP.Client_SYS.Add_To_Attr('CONV_FACTOR', 1, attr_);
         IFSAPP.Client_SYS.Add_To_Attr('COST', 0, attr_);
         IFSAPP.Client_SYS.Add_To_Attr('LIST_PRICE', 0, attr_);
         IFSAPP.Client_SYS.Add_To_Attr('PRICE_CONV_FACTOR', 1, attr_);
         IFSAPP.Client_SYS.Add_To_Attr('PRICE_UNIT_MEAS', rec_.C03, attr_);
         IFSAPP.Client_SYS.Add_To_Attr('COMPANY', 'SE', attr_);
         IFSAPP.Client_SYS.Add_To_Attr('TAXABLE_DB', 'Use sales tax', attr_);
         IFSAPP.Client_SYS.Add_To_Attr('FEE_CODE', '1', attr_);
         IFSAPP.Client_SYS.Add_To_Attr('CLOSE_TOLERANCE', 0, attr_);
         IFSAPP.Client_SYS.Add_To_Attr('PURCHASE_PART_NO', Prefix_Part_No__(rec_.c01), attr_);
         IFSAPP.Client_SYS.Add_To_Attr('NON_INV_PART_TYPE_DB', 'GOODS', attr_);
         IFSAPP.Client_SYS.Add_To_Attr('SOURCING_OPTION_DB', 'INVENTORYORDER', attr_);
         IFSAPP.Client_SYS.Add_To_Attr('USE_PRICE_INCL_TAX', ifsapp.fnd_boolean_api.Decode('FALSE'), attr_);
         IFSAPP.SALES_PART_API.New__(info_, objid_, objversion_, attr_, 'DO');


DECLARE 
   message_id_   NUMBER;
   message_line_ NUMBER := 1;
   CURSOR get_in_message_id_seq IS
      SELECT IFSAPP.in_message_id_seq.NEXTVAL message_id
      FROM   dual;

   attr_ VARCHAR2(2000);
   info_ VARCHAR2(2000);
   objid_ VARCHAR2(2000);
   objversion_ VARCHAR2(2000);
   
BEGIN
  FOR r_ IN get_in_message_id_seq LOOP
    message_id_ := r_.message_id;
  END LOOP;
  attr_ := NULL;
  IFSAPP.Client_SYS.Add_To_Attr('MESSAGE_ID', message_id_, attr_ );
  IFSAPP.Client_SYS.Add_To_Attr('CLASS_ID', 'SE_PART_INFO', attr_ );
  IFSAPP.Client_SYS.Add_To_Attr('RECEIVER', 'CONNECT', attr_ );
  IFSAPP.Client_SYS.Add_To_Attr('SENDER', :currentItemMaster__TransactionId, attr_ );
  IFSAPP.Client_SYS.Add_To_Attr('SENDER_MESSAGE_ID', :itemNumber, attr_ );
  IFSAPP.Client_SYS.Add_To_Attr('APPLICATION_MESSAGE_ID', :itemRevision, attr_ );
  IFSAPP.Client_SYS.Add_To_Attr('RECEIVED_TIME', SYSDATE, attr_ );
  IFSAPP.Client_SYS.Add_To_Attr('VERSION', :currentItemMaster__ItemNumber ||'/'|| :currentItemMaster__Revision, attr_ );
  IFSAPP.Client_SYS.Add_To_Attr('CONNECTIVITY_VERSION', '1.0', attr_ );
  IFSAPP.Client_SYS.Add_To_Attr('SENDER_ID', 'SEFLOW', attr_ );
  IFSAPP.In_Message_API.New__(info_, objid_, objversion_, attr_, 'DO' );
  attr_ := NULL;
  IFSAPP.Client_SYS.Add_To_Attr('MESSAGE_ID', message_id_, attr_ );
  IFSAPP.Client_SYS.Add_To_Attr('NAME', 'ROW', attr_ ); 
  IFSAPP.Client_SYS.Add_To_Attr('MESSAGE_LINE', 1, attr_ );
  IFSAPP.Client_SYS.Add_To_Attr('C01', :itemNumber, attr_ ); 
  IFSAPP.Client_SYS.Add_To_Attr('C02', :itemRevision, attr_ ); 
  IFSAPP.Client_SYS.Add_To_Attr('C03', :itemUnits, attr_ ); 
  IFSAPP.Client_SYS.Add_To_Attr('C04', '', attr_ ); /* Item Type missing in BOM */
  IFSAPP.Client_SYS.Add_To_Attr('C05', :itemLastUpdatedBy, attr_ ); 
  IFSAPP.Client_SYS.Add_To_Attr('C06', :itemStatus, attr_ ); 
  IFSAPP.Client_SYS.Add_To_Attr('C07', :itemTitle, attr_ );
  IFSAPP.Client_SYS.Add_To_Attr('C08', :itemDescription, attr_ ); 
  IFSAPP.Client_SYS.Add_To_Attr('C09', :itemInternalDescription, attr_ ); 
  IFSAPP.Client_SYS.Add_To_Attr('C10', :itemMaterialCertificate, attr_ ); 
  IFSAPP.Client_SYS.Add_To_Attr('C11', :itemCategory1, attr_ ); 
  IFSAPP.Client_SYS.Add_To_Attr('C12', :itemCategory2, attr_ ); 
  IFSAPP.Client_SYS.Add_To_Attr('C13', :itemCategory3, attr_ ); 
  IFSAPP.Client_SYS.Add_To_Attr('C14', :itemCategory4, attr_ ); 
  IFSAPP.Client_SYS.Add_To_Attr('C15', :itemSparePart, attr_ ); 
  IFSAPP.Client_SYS.Add_To_Attr('C16', :itemVendor, attr_ ); 
  IFSAPP.Client_SYS.Add_To_Attr('C17', :itemSerialNo, attr_ ); 
  IFSAPP.Client_SYS.Add_To_Attr('C18', :itemStatus, attr_ ); 
  IFSAPP.Client_SYS.Add_To_Attr('C19', :itemRevision, attr_ );
  IFSAPP.Client_SYS.Add_To_Attr('C31', :itemCreatedBy, attr_ );
  IFSAPP.Client_SYS.Add_To_Attr('C32', :itemCreatedDate, attr_ );
  IF :itemCriticalItem = 'True' THEN
     IFSAPP.Client_SYS.Add_To_Attr('C20', '1', attr_ ); 
  ELSE
     IFSAPP.Client_SYS.Add_To_Attr('C20', '0', attr_ ); 
  END IF;
  IF :itemLongLeadItem = 'True' THEN
     IFSAPP.Client_SYS.Add_To_Attr('C21', '1', attr_ ); 
  ELSE
     IFSAPP.Client_SYS.Add_To_Attr('C21', '0', attr_ ); 
  END IF;
  IFSAPP.Client_SYS.Add_To_Attr('C22', :itemSupplierPartNo, attr_ ); 
  IFSAPP.Client_SYS.Add_To_Attr('C23', :itemMaterial, attr_ ); 
  IFSAPP.Client_SYS.Add_To_Attr('C24', '', attr_ ); /*Project*/
  IFSAPP.Client_SYS.Add_To_Attr('D01', SYSDATE, attr_ ); /*LastModDate*/
  IFSAPP.Client_SYS.Add_To_Attr('C25', :itemMassG, attr_ ); /*Mass_g*/
  IFSAPP.Client_SYS.Add_To_Attr('C30', :itemTransactionId, attr_ ); /*TransactionId*/
  
  IFSAPP.In_Message_Line_API.New__( info_, objid_, objversion_, attr_, 'DO' );
  :out_messageId := message_id_;
END;



## USAGE ##

BEGIN
   FOR m_ IN get_in_message LOOP
      attr_ := NULL;
      IF m_.objstate = 'Posted' THEN
         IFSAPP.In_Message_API.Activate__(info_, m_.objid, m_.objversion, attr_, 'DO');
         IFSAPP.In_Message_API.Transfer__(info_, m_.objid, m_.objversion, attr_, 'DO');
         COMMIT;
      END IF;
      FOR r_ IN get_line(m_.message_id) LOOP
         BEGIN
         
            step_ := 0;
            Create_Part_Catalog(r_);
            step_         := 1;
            new_revision_ := NULL;
            Create_Eng_Part(new_revision_, r_);
            step_ := 2;
            Create_Inventory_Part(r_);
            step_ := 3;
            Create_Purchase_Part(r_);
            step_ := 4;
            Create_Sales_Part(r_);
            step_ := 5;
            attr_ := NULL;
            ifsapp.Client_SYS.Add_To_Attr('APPLICATION_MESSAGE_ID', new_revision_, attr_);
            IFSAPP.In_Message_API.Modify__(info_, m_.objid, m_.objversion, attr_, 'DO');
            IFSAPP.Connectivity_SYS.Accept_Message_Line(r_.message_id, r_.message_line);
            IFSAPP.Connectivity_Sys.Set_In_Message_State(r_.message_id);
            COMMIT;
            ok_ := 1;
         EXCEPTION
            WHEN OTHERS THEN
               error_message_ := SQLERRM;
               ROLLBACK;
               IFSAPP.Connectivity_SYS.Reject_Message_Line(r_.message_id,
                                                           r_.message_line,
                                                           error_message_);
               IFSAPP.Connectivity_Sys.Set_In_Message_State(r_.message_id);
               COMMIT;
               ok_ := 0;
         END;
      END LOOP;
   END LOOP;
END;